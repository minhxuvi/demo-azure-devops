# This YAML file contains the Azure DevOps pipeline configuration for provisioning a Kubernetes cluster using Terraform on Azure.
# The pipeline includes three TerraformCLI tasks: init, apply, and destroy.
# The init task initializes the Terraform backend and downloads the necessary modules.
# The apply task creates the Kubernetes cluster using the specified variables and the public key downloaded from Azure DevOps secure files.
# The destroy task destroys the Kubernetes cluster created by the apply task.
# The pipeline is triggered on changes to the main branch and runs on an Ubuntu VM.
trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: echo K8S Terraform Azure!
  displayName: 'Run a one-line script'
- task: DownloadSecureFile@1
  name: publickey
  inputs:
    secureFile: 'azure_rsa.pub'
- task: TerraformCLI@2
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
    backendType: 'azurerm'
    backendServiceArm: 'azure-resource-manager-service-connection'
    ensureBackend: true
    backendAzureRmResourceGroupName: 'terraform-backend-minhxuvi'
    backendAzureRmResourceGroupLocation: 'Southeast Asia'
    backendAzureRmStorageAccountName: 'storageaccountminhxuvi'
    backendAzureRmContainerName: 'storageaccountminhxuvicontainer'
    backendAzureRmKey: 'kubernetes-dev.tfstate'
    allowTelemetryCollection: true

- task: TerraformCLI@2
  inputs:
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
    environmentServiceName: 'azure-resource-manager-service-connection'
    commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(publickey.secureFilePath)'
    allowTelemetryCollection: true

- task: TerraformCLI@2
  inputs:
    command: 'destroy'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
    environmentServiceName: 'azure-resource-manager-service-connection'
    commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(publickey.secureFilePath)'
    allowTelemetryCollection: true
